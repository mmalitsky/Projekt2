;# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;# Cycle:     NC_INIT2.SPF
;# Task:      Hochlaufprogramm Kanal 2
;# Version:   V06.00.07
;# Date:      08.08.2017  /  Simons
;# Control:   840DSL Operate
;# TM:        Siemens
;# NBHSeries: 5 - 1000
;# Magazines: DDisk
;# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;#
;-------------------------------------
;
; Verlauf:
; --------
;
; V06.00.07 - 08.08.2017 / Simons
; - WHENEVER (TRUE) DO -> DO
;
; V06.00.07 - 30.07.2017 / Simons
; - Funktion IDS=16 in IDS=15
; - formale Aenderungen
;
; V06.00.07 - 03.06.2017 / Simons
; - Neuversionierung
; - formale Aenderungen
;
; V06.00.06 - 21.04.2017 / Simons
; - Neuversionierung
; - formale Aenderungen
;
; V06.00.05 - 04.02.2017 / Simons
; - SYG_IM[mcSYG_ErrIncCha2] hinzu
;
; V06.00.05 - 29.09.2016 / Simons
; - Neuversionierung
; - CFG_MAN zur DDS Erkennung
;
; V06.00.04 - 08.08.2016 / Simons
; - Neuversionierung
; - Zusammenfassung (IDS=20..25)
;
; V06.00.03 - 14.05.2016 / Simons
; - Neuversionierung
;
; V06.00.02 - 03.12.2015 / Simons
; - Verweilzeit in Warteschleife
;
; V04.00.00 - 26.03.2015 / Huettner
; - Vorlage
;-------------------------------------
;
; Hochlaufprogramm Kanal 2 fuer
; Doppel-/VierfachScheibe
;
;-------------------------------------

PROC NC_INIT2

DEF STRING[32] sCycName="NC_INIT2 V06.00.07", sMNType
;
DEF INT iCount
;
DEF REAL rc0x1mm, rc0x5mm

;Vierfachscheibe
CFG_MAN("MN",sMNType)

OUT_StartUpFinished2=FALSE rc0x1mm=grInchMetr*0.1 rc0x5mm=grInchMetr*0.5

WHILE (NOT OUT_StartUpFinished1)
  ;bis NC_INIT1 fertig ist
  STOPRE
ENDWHILE

FOR iCount=1 TO 39
  CANCEL(iCount)
  STOPRE
ENDFOR

; Aktivieren der Synchronaktionen fuer Kanal 2
;---------------------------------------------

;Synchronaktionen 1 .. 10 (Kanal 2) von PLC nur in JOG freigegeben
;
;In Gasse Bewegung stoppen, aber nur, falls Verfahrbewegung nicht von PLC (FC18) angestossen wurde:
IDS=1 WHENEVER (NOT OUT_SysCha2Active)AND(OUT_OnMiddleX)AND(NOT IN_StopOnMiddleX)AND($AA_TYP[mcAxX1]<>3) DO $AA_OVR[mcAxX1]=0
IDS=2 WHENEVER (NOT OUT_SysCha2Active)AND(OUT_OnPosX)AND(NOT IN_StopOnMiddleX)AND($AA_TYP[mcAxX1]<>3) DO $AA_OVR[mcAxX1]=0

;DG schuetzen
IDS=3 WHENEVER (NOT (IN_ManModeWoLock OR OUT_SysCha2Active)) AND ($AA_IM[mcAxX1]<=grHGPosX[1]-rc0x5mm) AND ((($A_DBB[14] B_AND 3)==0) OR (($A_DBB[14] B_AND 3)==2)) DO $AC_OVR=0 $AA_OVR[mcAxX1]=0
IDS=4 EVERY    (NOT (IN_ManModeWoLock OR OUT_SysCha2Active)) AND ($AA_IM[mcAxX1]<=grHGPosX[1]-rc0x5mm) AND  (($A_DBB[14] B_AND 3)==2) DO SETAL(AL_AxisMinusBlocked)

;HG in WzW-Position / HG im Einfaedelbereich HG->DG / ...
IDS=15 DO OUT_HgInTcPos=(ABS($AA_IM[mcAxX1]-grHgTcPosX)<=rc0x1mm) OUT_ComeInTC=(($AA_IM[mcAxX1]>=grHgTcPosX-grRange)AND($AA_IM[mcAxX1]<grHgTcPrePosX-grRange)) $A_DBB[47]=($AC_STAT) SYG_IM[mcSYG_ErrIncCha2]=(($A_DBB[6] B_AND 2)<>0)

;X1-Achse auf Mittelgasse 1/2/3
IDS=17 DO SYG_IM[2]=(ABS($AA_IM[mcAxX1]-grLaneX[1])<=grRange) SYG_IM[3]=(ABS($AA_IM[mcAxX1]-grLaneX[2])<=grRange) SYG_IM[4]=((ABS($AA_IM[mcAxX1]-grLaneX[3])<=grRange)AND(sMNType=="D120")) $A_DBB[117]=(SYG_IM[2]+SYG_IM[3]*2+SYG_IM[4]*4)

;X1-Achse auf einer der festen Positionen / Istwert X1-Achse wird auf die Schnittstelle zur PLC (DBR196)geschrieben
IDS=18 DO OUT_OnMiddleX=($A_DBB[117]>0) $A_DBR[196]=($AA_IM[mcAxX1]) OUT_OnPosX=((OUT_OnMiddleX)OR(ABS($AA_IM[mcAxX1]-grAxisPos[33])<=grRange)OR(ABS($AA_IM[mcAxX1]-grAxisPos[34])<=rc0x5mm)OR(ABS($AA_IM[mcAxX1]-grAxisPos[36])<=rc0x5mm)OR(ABS($AA_IM[mcAxX1]-grAxisPos[37])<=grRange))

;Istposition V-Achse an PLC melden und bei Netzausfall, Setze Merker und Sperre OVR
IF (sMNType=="D120")
  IDS=19 DO OUTA_ActPosV1=$AA_ACT_INDEX_AX_POS_NO[mcAxV1] OUTA_ActPosV2=$AA_ACT_INDEX_AX_POS_NO[mcAxV2] $A_DBR[192]=$AA_IM[mcAxV1] $A_DBR[184]=$AA_IM[mcAxV2]
  IDS=210 WHENEVER ($A_DBB[82]==1) DO $AC_OVR=0 $AA_OVR[mcAxX1]=0 $AA_OVR[mcAxV1]=0 $AA_OVR[mcAxV2]=0
ELSE
  IDS=19 DO OUTA_ActPosV1=$AA_ACT_INDEX_AX_POS_NO[mcAxV1] $A_DBR[192]=$AA_IM[mcAxV1]
  IDS=210 WHENEVER ($A_DBB[82]==1) DO $AC_OVR=0 $AA_OVR[mcAxX1]=0 $AA_OVR[mcAxV1]=0
ENDIF
;
;NC-Initialisierung erfolgreich
OUT_StartUpFinished2=TRUE
;
M30

