;# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;# Cycle:     TstStop2.SPF
;# Task:      TestStopp Kanal 2
;# Version:   V06.00.07
;# Date:      23.10.2017 / Simons
;# Control:   840DSL Operate
;# TM:        Siemens/HHD
;# NBHSeries: 5-500
;# Magazines: Chain
;# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;#
;------------------------------------
;
; Verlauf:
; --------
;
; V06.00.07 - 23.10.2017 / Simons
; - Neuversionierung
; - MovASync
;
; V06.00.06 - 21.04.2017 / Simons
; - Neuversionierung
; - FreeHGSp -> MovAsync
;
; V06.00.05 - 21.09.2016 / Simons
; - Neuversionierung
;
; V06.00.04 - 29.08.2016 / Simons
; - Neuversionierung
; - bMagIsWM307 hinzu
;
; V06.00.03 - 06.05.2016 / Simons
; - Neuversionierung
;
; V04.00.00 - 25.03.2014 / Huettner
; - Vorlage
;
;------------------------------------
;
; Teststop mit Bremsentest im Kanal 2
;
;------------------------------------

PROC TSTSTOP2(INT iMode)

DEF STRING[32] sCycName="TstStop2 V06.00.06", sAlarmParam=""
;
DEF BOOL bMagIsMiksch, bMagIsChain, bDGIsWM307, bMagIsWM307, bMagXTIsNcAxis
;
DEF INT iAlarmNo=0

bDGIsWM307=((giDGType B_AND 'B100')<>0) bMagIsChain=((giMagType B_AND 'B100')<>0) bMagIsMiksch=((bMagIsChain)AND(NOT bDGIsWM307)) bMagIsWM307=((bMagIsChain)AND(bDGIsWM307)) bMagXTIsNcAxis=((giMagType B_AND 'B11100010')<>0)

IF ($P_SEARCH)OR($P_SIM)OR($P_CHANNO<>2) GOTOF ENDE

IF (NOT $P_SUBPAR[1])
  iMode=0
ENDIF

;zur Synchronisierung notwendig
STOPRE

;- Schritt 1-
;------------
;
IF (($TC_MPP6[9998,mcLocDG1]>0)OR($TC_MPP6[9998,mcLocDG2]>0))
  ;
  ; DG erst leerfahren
  ; nur Auftrag an Kanal 2 (asynchron) absetzen und Zyklus verlassen
  ;
  MovASync("0")
  ;
  ;TstStop2 wartet nicht auf Vollzug, da ja der Kanal 2 zugleich der Ausfuehrende ist.
  ;Erst wenn der NC-Zyklus <TestStop> verlassen wird, kommt Sys_Cha2.spf wieder zum
  ;Zuge und kann den zuvor abgesetzten fuer Kanal 2 bestimmten Auftrag aufgreifen. Nach
  ;dessen Ausfuehrung verzweigt die Stelle (in Sys_Cha2.spf), an der abgefragt wird, ob Teststop
  ;angefordert ist, wieder in den NC-Zyklus <Teststop> und fuehrt dann die geforderten Achsbewegungen aus.
  ;solange im DG (noch) ein Wz ist aussteigen, um dieses wegbringen zu koennen
  GOTOF ENDE
ENDIF

;DG ist leer

MSG(MSG_TestStopRunning)

IF (bMagIsMiksch)
  ;
  IF (mcbDBB_DGLinInTCPos)
    ;
    ;DG ist in WzW-Position
    ;
    IF (NOT mcbDBB_DGHorizontal)
      ;
      iAlarmNo=AL_DgNotInBasePos
      GOTOF ENDE
    ENDIF
    ;
    IF (NOT mcbDBB_DGRetracted)
      M_DgRet1
    ENDIF
    ;
    ;DG ist leer/horizontal in Grundstellung
    ;
  ELSE
    ;
    ;DG steht ausserhalb WzW-Position
    ;
    IF (mcDBB_DGLinStat==0)
      ;
      IF (mcbDBB_ChInPos)AND((mcbDBB_DGRetracted)OR(mcbDBB_DGAdvanced))
        ;
        IF (bMagXTIsNcAxis)
          ;
          ;DG In WzWposition bringen
          FA[mcAxX1]=rVeloX POS[mcAxX1]=grDGPosX[1]
        ELSE
          M_DgPos1Wt
        ENDIF
      ELSE
        ;
        ;DG nicht in definierter Position
        iAlarmNo=AL_DgPosInvalid
        GOTOF ENDE
      ENDIF
    ENDIF
    ;
    M_DgRet1
    M_DgPos1Wt
    ;
    ;leerer DG in Werkzeugwechselposition
    ;
  ENDIF
ENDIF
;
IF (bMagIsWM307)AND(NOT OUT_DGRotInBasePos)
  ;
  iAlarmNo=AL_DgNotInBasePos
  GOTOF ENDE
ENDIF
;
STOPRE
;an Kanal 1: Kanal2-Achsen haben Teststop-Position erreicht
giStepTeststop=4

;-Schritt 2-
;-----------
;warten, bis Kanal 1 Teststop mit Bremsentest beendet hat
REPEAT
  G4 F0.1
  STOPRE
UNTIL (giStepTeststop==5)

;-Schritt 3-
;-----------
STOPRE
;Start Teststop (mit Bremsentest)
M299
;
STOPRE
;Warten auf Teststop-Ende
;
M296
STOPRE
;
;der von Kanal 1 geforderte Teststop wurde von Kanal 2 ausgefuehrt
giStepTeststop=6

;-Schritt 4-
;-----------
WHILE (giStepTeststop)
  ;warten, bis Kanal 2 Teststop beendet hat
  G4 F0.1
  STOPRE
ENDWHILE
;
;====
ENDE:
;====
;
MSG("")
;
giStepTeststop=0
;
IF (iAlarmNo>0)
  SETAL(iAlarmNo, sAlarmParam)
ENDIF
;
M17
