;# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;# Cycle:     GetChipName.SPF
;# Task:      WzName von PLC
;# Version:   V06.00.06
;# Date:      15.04.2017 / Simons
;# Control:   840D
;# TM:        All
;# NBHSeries: All
;# Magazines: All
;# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;#
;------------------------------------
;
; Beschreibung:
; -------------
;
; WzName vom Chip Lesen
; Der uebertragene String hat eine maximale
; Laenge von 32 Zeichen und wird mit
; einer binaeren NULL oder einem Leerzeichen
; beendet.
;
; DBB[660..691]: WzName
; DBB[692]: Semaphor (Wz Name)
; DBB[693]: Frei
; DBB[694]: Bit0: Wz loeschen
;           Bit1: keine Duplonummer auf Chip
;           Bit2: Chip wurde konvertiert
;           Bit3: WzName bereitgestellt
;           Bit4: Chip erkannt
; DBB[695]: Frei
; DBW[696]: Duplomummer fuer PLC
; DBW[698]: Duplomummer von PLC(Chip)
;
;------------------------------------
;
; Verlauf:
; --------
;
; V06.00.06 - 15.04.2017 / Simons
; - Neuversionierung
; - Wartezeit auf 6s
;
; V06.00.05 - 02.10.2016 / Simons
; - Neuversionierung
;
; V04.00.01 - 09.10.2015 / Fengler
; - Vorlage
;
;------------------------------------

PROC GetChipName(VAR STRING[32] sChipName, VAR BOOL bOK) SAVE DISPLOF

DEF STRING[32] sCycName="GetChipName_V06.00.06"
;
DEF BOOL bLastSign1, bLastSign2, bLastSign3, bLastSign4
;
DEF INT iCount=0, iSign1, iSign2, iSign3, iSign4, iWait
;
DEF REAL rWaitShort

sChipName="" bOK=FALSE rWaitShort=(3*$MN_IPO_CYCLE_TIME) iWait=RTOI(6/(rWaitShort+$MN_IPO_CYCLE_TIME))

WHILE (($A_DBB[694] B_AND 'B1000')==0)
  ;
  ;Warten bis der WzName bereitgestellt ist
  ;
  iCount=iCount+1
  IF (iCount>iWait)
    ;
    ;Fehler beim konvertieren -> Fehlerausgabe PLC
    ;
    GOTOF ENDE
  ENDIF
  G4 F=rWaitShort
ENDWHILE

;1. Zeichen Loeschen und Semaphor Loeschen
$A_DBB[660]=0 $A_DBB[692]=0 iCount=0
;
WHILE ($A_DBB[692]==0)
  ;
  ;Warten bis Daten uebermittelt worden sind
  ;
  iCount=iCount+1
  IF (iCount>iWait)
    ;
    ;Fehler beim konvertieren -> Fehlerausgabe PLC
    ;
    GOTOF ENDE
  ENDIF
  G4 F=rWaitShort
ENDWHILE

iCount=0
REPEAT
  ;
  ;Name in Viererbloecken auslesen - Bis zum Textende oder erstem Leerzeichen (max. 32 Zeichen)
  ;
  iSign1=$A_DBB[660+iCount] iSign2=$A_DBB[661+iCount] iSign3=$A_DBB[662+iCount] iSign4=$A_DBB[663+iCount] bLastSign1=((iSign1==0)OR(iSign1==32)) bLastSign2=((iSign2==0)OR(iSign2==32)) bLastSign3=((iSign3==0)OR(iSign3==32)) bLastSign4=((iSign4==0)OR(iSign4==32))
  IF(NOT bLastSign1)
    sChipName[iCount]=iSign1
    IF(NOT bLastSign2)
      sChipName[iCount+1]=iSign2
      IF(NOT bLastSign3)
        sChipName[iCount+2]=iSign3
        IF(NOT bLastSign4)
          sChipName[iCount+3]=iSign4 iCount=iCount+4
        ENDIF
      ENDIF
    ENDIF
  ENDIF
UNTIL ((bLastSign1)OR(bLastSign2)OR(bLastSign3)OR(bLastSign4)OR(iCount>=32))

;====
ENDE:
;====
;
bOK=(iCount>0)
;
RET
