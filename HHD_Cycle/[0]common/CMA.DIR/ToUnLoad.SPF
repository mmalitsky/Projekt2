;# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;# Cycle:     ToUnLoad.SPF
;# Task:      WZ ueber Sp Entladen
;#            Beladestelle Hand
;# Version:   V06.00.07
;# Date:      04.09.2017 / Simons
;# Control:   840DSL Operate
;# TM:        Siemens
;# NBHSeries: 5-1000
;# Magazines: All
;# <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;#
; -----------------------------------
;
; Verlauf:
; --------
;
; V06.00.07 - 04.09.2017 / Simons
; - grSyncPickUpDrop nur bei Scheibe zuruecksetzen
;
; V06.00.07 - 18.08.2017 / Simons
; - AL_TlInSp -> AL_TlInSp67
;
; V06.00.07 - 04.06.2017 / Simons
; - Neuversionierung
; - Einfuehrung MakeAlarmParam
;
; V06.00.06 - 19.04.2017 / Simons
; - Neuversionierung
; - Tldata(...)
; - Wz Kennungen zuruecksetzen
; - EntladeWz im HG, Wz in Sp -> EntladeWz nach Sp -> Abbruch
; - Formale Aenderungen
;
; V06.00.05 - 07.04.2017 / Simons
; - giSyncPickupDrop-> grSyncPickupDrop
; - OEM_TlData(..,x) -> OEM_TlData(..,mc..)
;
; V06.00.05 - 14.03.2017 / Simons
; - Auch HG freifahren
;
; V06.00.05 - 26.09.2016 / Simons
; - Neuversionierung
; - Berechnung Kopfposition
; - Ueberpruefung HG auf leer
;
; V06.00.04 - 30.08.2016 / Simons
; - Neuversionierung
; - giSyncPickupDrop=0
; - Hinzu ID=SyncID_TCLoad ...
; - IF (iTNo==-1)...
;
; V06.00.03 - 10.06.2016 / Simons
; - Neuversionierung
; - HHD TM
; - Vorbereitung Wz Umspeichern im TMReset
; - Meldung bei SpWz Entladen
;
; V06.00.02 - 16.04.2016 / Simons
; - Einfuehrung MsgBox
; - TM HHD
; - giNumRealMag
;
; V06.00.02 - 23.09.2015 / Simons
; - Messzylinder Gndst entfernt
;
; V06.00.01 - 21.08.2015 / Simons
; - $TC_TPC[9] = 0 bei WM307
;
; V06.00.00 - 21.06.2015 / Simons
; - ProtoTyp
;------------------------------------
;
; Beschreibung:
; -------------
;
; - mcTaskUnload
;   111=<Entladen ueber Beladestelle_Hand>
; - mcTaskAS_T0
;   501=Spindel leerfahren asynchron
;
;------------------------------------

PROC ToUnLoad DISPLOF SBLOF

DEF STRING[32] sCycName="ToUnLoad V06.00.07", sAlarmParam=""
;
DEF BOOL bUnloadHgSp=FALSE, bDGIsWM307, bMagIsPickUpDisk, bWithHead, bMagIsMiksch, bMagIsChain, bMagIsWM307
;
DEF INT iAlarmNo=0, iFC8TaskId=1, iFC8TaskIdNo=1, iTNo
;
DEF REAL rc0x001Deg=0.001, rActDiffHead

;-1.0--TC Konfig-
;----------------
bDGIsWM307=((giDGType B_AND 'B100')<>0) bMagIsChain=((giMagType B_AND 'B100')<>0) bMagIsPickUpDisk=((giMagType B_AND 'B1')<>0) bMagIsMiksch=((bMagIsChain)AND(NOT bDGIsWM307)) bMagIsWM307=((bMagIsChain)AND(bDGIsWM307)) bWithHead=((gbSwivHeadExist)OR(gbTiltHeadExist))

;-3.0--Inch/Metrisch-
;--------------------
IF ($MN_SCALING_SYSTEM_IS_METRIC==1)
  G71
ELSE
  G70
ENDIF

;-10.0--Auftrag-
;---------------
;
STOPRE
iTNo=$AC_TC_TNO
;
;-10.1--Auftrag-
; Ueberpruefung
;---------------
;
IF (iTNo==-1)
  ;Ungueltiger Auftrag
  RET
ENDIF
;
IF (iTNo<=0)
  ;keins oder ungueltiges Wz
  iAlarmNo=AL_TNoNotAllowed sAlarmParam=<<iTNo
  GOTOF HandleAlarm
ENDIF
;
IF ($A_TOOLMN[iTNo]==giMagNoLoadList)AND(giMagNoLoadList>0)
  ;EntladeWz befindet sich in Beladeliste
  MakeAlarmParam(sAlarmParam,$TC_TP2[iTNo],<<$TC_TP1[iTNo])
  iAlarmNo=AL_TlInLoadList
  GOTOF HandleAlarm
ENDIF
;
;-10.4--Auftrag----
; Aktuelle Belegung
;------------------
giTNoSp=$TC_MPP6[9998,mcLocSp] giTNoDG1=0 giTNoDG2=0 giTNoHG=0
IF (gbWithDG)
  giTNoDG1=$TC_MPP6[9998,mcLocDG1] giTNoDG2=$TC_MPP6[9998,mcLocDG2]
ENDIF
IF (gbWithHG)
  giTNoHG=$TC_MPP6[9998,mcLocHG]
ENDIF
;
IF (gbWithHG)AND(giTNoHG>0)AND(iTNo==giTNoHG)
  ;
  ;Wz im HG ist das EntladeWz
  ;
  IF ($TC_TP2[giTNoHG]==DummyTName)
    ;
    ;Kann nicht Entladen werden
    iAlarmNo=AL_WrongTlInHG67 sAlarmParam=DummyTName
    GOTOF HandleAlarm
  ENDIF
  ;
  bUnloadHgSp=(giTNoSp>0)
ENDIF

;-20.0--Pruefungen-
; DG
;------------------
IF (gbWithDG)
  ;
  IF (((giTNoDG1>0)OR(giTNoDG2>0))AND(NOT bMagIsMiksch))OR(((giTNoDG1>0)AND(giTNoDG2>0))AND(bMagIsMiksch))
    iAlarmNo=AL_DGNotEmpty
    GOTOF HandleAlarm
  ENDIF
  ;
  IF (NOT mcbDBB_DGRetracted)
    iAlarmNo=AL_DgNotInBasePos
    GOTOF HandleAlarm
  ENDIF
ENDIF
;
;-20.1--Pruefungen-
; SpWz Spannen
;------------------
IF (giTNoSp>0)AND(mcbDBB_SpClampedNoTl)
  ; lt. WzV Wz in Spindel, aber <Spindel gespannt ohne Werkzeug>
  iAlarmNo=AL_TInSpButSpClampedNoTool
  GOTOF HandleAlarm
ENDIF
;
IF (NOT mcbDBB_SpClampedNoTl)AND(NOT mcbDBB_SpClamped)
  iAlarmNo=AL_SpNotClamped
  GOTOF HandleAlarm
ENDIF
;
;-20.2--Pruefungen------
; Schwenkkopf horizontal
;-----------------------
IF (bWithHead)
  ;
  IF (gbSwivHeadExist)
    rActDiffHead=($AA_IM[mcAxC]-grTCPosC)
  ENDIF
  ;
  IF (gbTiltHeadExist)
    rActDiffHead=($AA_IM[mcAxA]-grTCPosA)
  ENDIF
  ;
  IF (MINVAL(ABS(rActDiffHead),ABS(rActDiffHead-360))>rc0x001Deg)
    iAlarmNo=AL_HeadNotTcPos
    GOTOF HandleAlarm
  ENDIF
ENDIF

;-50.0--Ablauf--------------
; Start mit SK "Wz Entladen"
;---------------------------
;
;Messzylinder zurueck
M_ProbeCycBackw0
;
MsgBox(,,,,mcState2Clear)

IF (bUnloadHgSp)
  ;
  ;-50.1--Ablauf------------------
  ; Wz in Spindel und EntladeWz im HG
  ;-------------------------------
  MsgBox(T_UnLoadTl<<": T = "<<$TC_TP2[giTNoSp]<<" - "<<T_PutTlIntoMag,"CLEAR",,,mcState2WaitForEmptySp)
  ;
  ;EntladeWz von HG -> Sp
  TC_BS(mcTaskPrep,$TC_TP2[iTNo],$TC_TP1[iTNo])
  ;
  MsgBox(MSG_WaitForHgCleared,"RESET ErrTimeX=giMaxPrepTime","(giTNoHG<>0)",,mcState2WaitForEmptyHG)
  ;
  ;Abbruch und Aufforderung zum nachfolgenden Entladen der Spindel
  MakeAlarmParam(sAlarmParam,$TC_TP2[iTNo],<<$TC_TP1[iTNo])
  iAlarmNo=AL_TlInSp67
  GOTOF HandleAlarm
ENDIF

;Beladen/Entladen ueber Beladestelle_Hand
OUT_LoadUnloadActive=TRUE

IF (giTNoSp>0)AND(iTNo<>giTNoSp)
  ;
  MsgBox(T_UnLoadTl<<": T = "<<$TC_TP2[giTNoSp]<<" - "<<T_PutTlIntoMag,"CLEAR",,,mcState2WaitForEmptySp)
  ;
  ;-50.1--Ablauf------------------
  ; Wz in Spindel, wobei
  ; dieses nicht das EntladeWz ist
  ; SP/HG asynchron(!) leerfahren
  ;-------------------------------
  TC_BS(mcTaskAS_T0,"0",0)
  ;
  OUT_LoadUnloadActive=TRUE
  ;
  ;-50.2--Ablauf-----------
  ; Abfrage Leerfahren Ende
  ;------------------------
  MsgBox(MSG_WaitForEmptySp,"RESET ErrTimeX=giMaxPrepTime","(giTNoSp<>0)",,mcState2WaitForEmptySp)
  ;
  IF (gbWithHG)
    MsgBox(MSG_WaitForHgCleared,"RESET ErrTimeX=giMaxPrepTime","(giTNoHg<>0)",,mcState2WaitForEmptyHG)
  ENDIF
ENDIF

;-50.3--Ablauf--------
; Status:
; - SP leer
;   oder
; - EntladeWz in Sp
; - DG leer
; - SK Wz Beladen
; - NC Start
; - Sp Leer
;---------------------
MsgBox(T_UnLoadTl<<": T = "<<$TC_TP2[iTNo]<<" - "<<T_GetTlOutOfMag,"CLEAR",,,mcState2UnloadingActive)
;
IF (giTNoSp==0)OR(giTNoSp<>iTNo)
  ;
  STOPRE
  IF ($A_TOOLMN[iTNo]>=1)AND($A_TOOLMN[iTNo]<=giNumRealMag)
    ;
    IF (bMagIsWM307)
      ;
      ;Die Magazinbelegung aendert sich staendig -> Loeschen
      $TC_TPC9[iTNo]=0
    ELSE
      ;
      ;aktuellen Ort vermerken, z.B. fuer spaeteres Wiederbeladen
      $TC_TPC9[iTNo]=ITOR($A_TOOLMN[iTNo]*1000+$A_TOOLMLN[iTNo])
    ENDIF
  ENDIF
  ;
  ;-50.4--Ablauf---------------
  ; zu entladendes Wz anfordern
  ; in die Spindel einwechseln
  ;----------------------------
  ;
  TC_BS(mcTaskUnload,$TC_TP2[iTNo],$TC_TP1[iTNo])
  ;
  ;-50.5--Ablauf--------------------------------------
  ; Warten bis HG/DG leer und zu entladendes Wz in Sp
  ;--------------------------------------------------
  MsgBox(MSG_WaitForToolPutToSp,"RESET ErrTimeX=giMaxPrepTime","(giTNoSp<>"<<iTNo<<")",,mcState2PutToolInSp)
  ;
  IF (gbWithDG)
    MsgBox(MSG_WaitForDGCleared,"RESET ErrTimeX=giMaxPrepTime","(giTNoDG1<>0)OR(giTNoDG2<>0)",,mcState2WaitForEmptyDG)
  ENDIF
  ;
  IF (gbWithHG)
    MsgBox(MSG_WaitForHgCleared,"RESET ErrTimeX=giMaxPrepTime","(giTNoHg<>0)",,mcState2WaitForEmptyHG)
  ENDIF
  ;
  MsgBox(,,,,mcState2UnloadingActive)
ELSE
  ;
  ;-50.6--Ablauf----------------------------
  ; Das zu entladene Wz ist in Sp
  ; TC trotzdem aufrufen, wegen zentraler
  ; Verwendung von
  ; "Werkzeug zur Beladestelle_Hand bringen"
  ;-----------------------------------------
  TC_BS(mcTaskUnload,$TC_TP2[iTNo],$TC_TP1[iTNo])
ENDIF
;
IF (IN_TeststopReq)
  ;
  ;Teststop angefordert
  Teststop(1)
  STOPRE
ENDIF
;
;-50.7--Ablauf------------------------
; Werkzeug wurde zur Beladestelle_Hand
; gebracht (im TC - siehe oben)
;-------------------------------------
;
IF (NOT mcbDBB_SpClampedNoTl)
  ;
  IF (bMagIsPickUpDisk)
    giSyncTC=20 grSyncPickupDrop=0
  ELSE
    giSyncTC=20
  ENDIF
  ;
  IF (gbPLCSimActive)
    ;
    ;Damit die PLC Simulation den passenden Spannstatus erzeugt
    CANCEL(SyncID_TCLoad)
    ID=SyncID_TCLoad EVERY (($A_DBB[0] B_AND 'B111')==0) DO OUT_ToolInSp=NOT OUT_ToolInSp
  ENDIF
  ;
  ;Wenn nicht schon ohne Wz gespannt, Werkzeug entnehmen
  MsgBox(T_UnLoadTl<<": T = "<<$TC_TP2[iTNo]<<" - "<<T_GetTlOutOfSp,"ID=1 M288","(($A_DBB[0] B_AND 2)<>0)",,mcState2GetToolFromSp)
  ;
  CANCEL(SyncID_TCLoad)
ENDIF

;-70.0--Wz Daten----------------------
;Quittieren des Ortswechsels in die Sp
;-------------------------------------
;
;Quittieren des Ortswechsels Sp -> Beladestelle_Hand
ToAckn(TRUE,iFC8TaskId,iFC8TaskIdNo,iTNo,iTNo,9999,1,9998,mcLocSp,1)
giSyncTC=0 giTNoSp=$TC_MPP6[9998,mcLocSp]

;-70.1--Wz Daten-
; EntladeWz
;----------------
TLData(iTNo,mcSetRelTl + mcResActiveTl + mcResLoadUnloadTl)
;
OEM_TLData(iTNo,mcResMeasured_Tested)
;
SpTlData(1)

GOTOF FINISH

;===========
HandleAlarm:
;===========
;
;Abbruch an WzV
ToAckn(FALSE,iFC8TaskId,iFC8TaskIdNo,0,0,0,0,0,0,3)

;======
FINISH:
;======
;
OUT_LoadUnLoadActive=FALSE
;
IF (iAlarmNo>0)
  ;
  MsgBox(<<iAlarmNo,"RESET",,sAlarmParam,mcState2Error)
ELSE
  MsgBox("",,,,mcState2Clear)
ENDIF
;
RET
